{"version":3,"sources":["helpers.js","components/Storepicker.js","components/Header.js","components/Order.js","base.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","Fragment","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","deleteOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","base","Rebase","createClass","database","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","propType","PropTypes","shape","string","number","addToOrder","func","Login","authenticate","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","match","params","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.b17d7fcd.chunk.js","sourcesContent":["/* eslint-disable indent */\r\nexport function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","/* eslint-disable no-console */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n    // constructor() {\r\n    //     super();\r\n    //     this.goToStore = this.goToStore.bind(this);\r\n    // }\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    goToStore = (event) => {\r\n        event.preventDefault(); //stops form from submitting\r\n        const storeName = this.myInput.current.value; //get text from input\r\n        this.props.history.push(`/store/${storeName}`); //change page to /store/'whatever they entered'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                    <h2>Please Enter a Store</h2>\r\n                    <input \r\n                        type=\"text\" \r\n                        ref={this.myInput}\r\n                        required \r\n                        placeholder=\"Store Name\"\r\n                        defaultValue={ getFunName() }\r\n                    />\r\n                    <button type=\"submit\">Visit Store</button>\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n    <header className=\"top\">\r\n        <h1>Catch \r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">Of</span>\r\n                <span className=\"the\">The</span>\r\n            </span>\r\n        Day</h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\nimport {formatPrice} from \"../helpers\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n\r\n    static propTypes ={\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,    \r\n        deleteOrder: PropTypes.func\r\n    }\r\n    \r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status ===  \"available\"; \r\n        const transitionOptions = {\r\n            classNames: \"order\", \r\n            key: key,\r\n            timeout: {enter: 500, exit: 500}\r\n        };\r\n\r\n        if (!fish) return null;   //if null, nothing gets rendered. For a split sec when Order component first loads, list will say 'item not available\" since data from localStorage loads first in this component prior to data in Fish component gets loaded from Firebase. Therefore,set to null. Make sure fish state is loaded before we continue.\r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition {...transitionOptions} >    \r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name: \"fish\"} is no longer available\r\n                    </li>\r\n                </CSSTransition>  \r\n            );\r\n        \r\n        }\r\n        return (\r\n            <CSSTransition {...transitionOptions} >          \r\n                \r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition \r\n                                classNames=\"count\" \r\n                                key={count}     //refer to this so one number exits and next number enters in visually\r\n                                timeout={ {enter: 500, exit: 500} }\r\n                            >\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        lbs {fish.name + \" \"}\r\n                        {formatPrice(count * fish.price)}\r\n                        <button onClick={() => this.props.deleteOrder(key)}>&times;</button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>  \r\n        );\r\n        \r\n    };\r\n\r\n    render () {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {     //key represent one element in orderIds array\r\n            const fish = this.props.fishes[key];    //bracket notation since property is a variable\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status ===  \"available\"; //Boolean to see if fish is available- if not, don't price to Order \r\n\r\n            if (isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;   //fish is not available\r\n        }, 0);\r\n        \r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,  //can hide with env variables\r\n    authDomain: \"catch-of-the-day-rogerh.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-rogerh.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n//This is a named export\r\nexport {firebaseApp};\r\n\r\n//This is a default export\r\nexport default base;","/* eslint-disable no-console */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    } \r\n\r\n    createFish = (event) => {\r\n        event.preventDefault();   //stop form from submitting (to server)\r\n\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value), //stored as a number\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        };\r\n        this.props.addFish(fish);\r\n        //refresh the form\r\n        event.currentTarget.reset();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\n\r\nclass EditFishForm extends React.Component {\r\n\r\n    static propType = {\r\n        fish:  PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string, \r\n            addToOrder: PropTypes.func\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        //update that fish\r\n        //1. take a copy of the current fish\r\n        const updatedFish = {...this.props.fish, [event.currentTarget.name]: event.currentTarget.value};     //similar to: \"name: event.currentTarget.value\". When property in \"prop:value\" is a variable, wrap in [].\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    }\r\n\r\n    render () {\r\n        return <div className=\"fish-edit\">\r\n            <input \r\n                type=\"text\" \r\n                name=\"name\" //so the prop in \"prop:value\" can be dynamically updated in state using \"event.currentTarget.name\"\r\n                onChange={this.handleChange} \r\n                value={this.props.fish.name} />\r\n            <input \r\n                type=\"text\" \r\n                name=\"price\" \r\n                onChange={this.handleChange} \r\n                value={this.props.fish.price} />\r\n            <select \r\n                type=\"text\" \r\n                name=\"status\" \r\n                onChange={this.handleChange} \r\n                value={this.props.fish.status}>\r\n                <option value=\"available\">Fresh!</option>\r\n                <option value=\"unavailable\">Sold Out!</option>\r\n            </select>\r\n            <textarea \r\n                name=\"desc\" \r\n                onChange={this.handleChange} \r\n                value={this.props.fish.desc}></textarea>\r\n            <input \r\n                type=\"text\" \r\n                name=\"image\" \r\n                onChange={this.handleChange} \r\n                value={this.props.fish.image} />\r\n            <button onClick={() => {\r\n                this.props.deleteFish(this.props.index);\r\n                this.props.deleteOrder(this.props.index);}\r\n            }>Remove Fish</button>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>Log In With Github</button>\r\n        <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>Log In With Twitter</button>\r\n        <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>Log In With Facebook</button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};   \r\n\r\nexport default Login;","/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\nimport firebase from \"firebase\";\r\nimport base, {firebaseApp} from \"../base\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\n\r\nclass Inventory extends React.Component {\r\n\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        deleteOrder: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    }\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({user});\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        //1. Look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, {context: this});\r\n        console.log(store);\r\n        //2. Claim it if thereis no owner\r\n        if (!store.owner) {\r\n            //save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n        //3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    }\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        console.log(\"Logging out\");\r\n        await firebase.auth().signOut();\r\n        this.setState({uid: null});\r\n    }\r\n\r\n    render () {\r\n        const logout = <button onClick={this.logout}>Log Out!</button>;\r\n        //1. Check if they are logged in \r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        \r\n        //2. Check if they are not the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return <div>\r\n                <p>Sorry, you are not the owner.</p>\r\n                {logout}\r\n            </div>;\r\n        }\r\n\r\n        //3. They must be the owner. Render the inventory.\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => \r\n                    <EditFishForm \r\n                        key={key} \r\n                        index={key}\r\n                        fish={this.props.fishes[key]} \r\n                        updateFish={this.props.updateFish}\r\n                        deleteFish={this.props.deleteFish}\r\n                        deleteOrder={this.props.deleteOrder} />\r\n                )}\r\n                <AddFishForm addFish={this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","/* eslint-disable indent */\r\n// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";     //import npm packages before relative path files\r\nimport {formatPrice} from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {    //static means propTypes only lives on this component and passes the propType rules to other created Fish components (static variable- so not duplicated on every component/instance) \r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string, \r\n            addToOrder: PropTypes.func\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n\r\n    render () {\r\n        const {image, name, price, desc, status} = this.props.details; //obj destructuring\r\n        const isAvailable = status === \"available\";    //Boolean\r\n\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name}/>\r\n                <h3 className=\"fish-name\">{name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={ () => this.props.addToOrder(this.props.index)}> {isAvailable ? \"Add To Order\": \"Sold Out!\"} </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fish;","/* eslint-disable no-undef */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";    //can rename it since we're importing default\r\nimport Fish from \"./Fish\";   \r\nimport base from \"../base\";\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}       //persisted in local storage\r\n    };  \r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {storeId} = this.props.match.params;  //from Router under App\r\n        //first reinstate our localStorage since on refresh it will trigger an update (componentDidUpdate) and empty out what's in order in localStorage\r\n        const localStorageRef = localStorage.getItem(storeId);  //returns order state for this store\r\n        if (localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) });   //convert string back to object\r\n        }\r\n\r\n        this.ref = base.syncState(`${storeId}/fishes`, {    //reference to which store, then to fish obj that db will mirror its state\r\n            context: this,\r\n            state: \"fishes\"\r\n        }); \r\n    }\r\n\r\n    componentDidUpdate() {      //after props or state gets updated and component re-renders (not called after initial render)\r\n        // console.log(this.state.order);\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));    //this sets the key in key:value under local storage\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n\r\n\r\n    addFish = (fish) => {\r\n        //1. Take copy of existing state (i.e thru object spread)\r\n        const fishes = {...this.state.fishes};\r\n        //2. Add new fish to existing fishes variable (in #1)\r\n        fishes[`fish${Date.now()}`] = fish; \r\n        //3. Set the new fishes object to state\r\n        this.setState({\r\n            fishes: fishes  //or just fishes since prop & value are same\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //1.Take copy of current state\r\n        const fishes = {...this.state.fishes};\r\n        //2. Update that state\r\n        fishes[key] = updatedFish;\r\n        //3. Set that to state\r\n        this.setState({\r\n            fishes\r\n        });\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        //1. take a copy of state\r\n        const fishes = {...this.state.fishes};\r\n        //2. update the state\r\n        fishes[key] = null; //in order to delete from Firebase (can't use delete)\r\n        //3. update state\r\n        this.setState({\r\n            fishes\r\n        });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({\r\n            fishes: sampleFishes\r\n        });\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        //1. Take a copy of state\r\n        const order = {...this.state.order};\r\n        //2. Either add to the order, or update the number in our order\r\n        order[key] = order[key] + 1 || 1; \r\n        //3. Call setState to update our state object\r\n        this.setState({\r\n            order: order    //or just 'order'\r\n        });\r\n    }\r\n\r\n    deleteOrder = (key) => {\r\n        const order = {...this.state.order};\r\n        delete order[key];\r\n        this.setState({\r\n            order\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\" />\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} deleteOrder={this.deleteOrder} />   {/* can also do {...this.state} but not as modular */}\r\n                <Inventory \r\n                    storeId={this.props.match.params.storeId}\r\n                    fishes={this.state.fishes} \r\n                    addFish={this.addFish} \r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    deleteOrder={this.deleteOrder}\r\n                    loadSampleFishes={this.loadSampleFishes} />  {/*add prop with same name as property of method- goal is to update state from form*/}\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found!</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","/* eslint-disable no-unused-vars */\r\n\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./Storepicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} /> \r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter> \r\n);\r\n\r\nexport default Router;","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {render} from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));"],"sourceRoot":""}